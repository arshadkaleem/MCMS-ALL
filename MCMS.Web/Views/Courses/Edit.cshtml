@model MCMS.Infrastructure.Models.Course
@{
    ViewData["Title"] = "Edit Course";
    ViewData["Subtitle"] = "Modify course information";
}

<div class="card shadow-sm">
    <div class="card-header bg-white d-flex justify-content-between align-items-center py-3">
        <h5 class="mb-0 text-dark fw-bold">Edit Course Information</h5>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Back to List
        </a>
    </div>
    <div class="card-body">
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
                <div class="d-flex">
                    <i class="fas fa-exclamation-circle me-2 mt-1"></i>
                    <div>
                        <strong>Please correct the following errors:</strong>
                        <ul class="mb-0 mt-1">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CourseId" />

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-4">
                        <label asp-for="CourseName" class="form-label fw-bold"></label>
                        <input asp-for="CourseName" class="form-control" placeholder="Enter course name" />
                        <span asp-validation-for="CourseName" class="text-danger"></span>
                        <div class="form-text">Full name of the course (e.g. Bachelor of Computer Science)</div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="Slug" class="form-label fw-bold"></label>
                        <div class="input-group">
                            <span class="input-group-text text-muted">/courses/</span>
                            <input asp-for="Slug" class="form-control" placeholder="course-slug" />
                        </div>
                        <span asp-validation-for="Slug" class="text-danger"></span>
                        <div class="form-text">URL-friendly version of course name</div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="DepartmentId" class="form-label fw-bold">Department</label>
                        <select asp-for="DepartmentId" class="form-select" asp-items="ViewBag.DepartmentId">
                            <option value="">-- Select Department --</option>
                        </select>
                        <span asp-validation-for="DepartmentId" class="text-danger"></span>
                        <div class="form-text">Department to which this course belongs</div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="mb-4">
                        <label asp-for="CollegeType" class="form-label fw-bold"></label>
                        <select asp-for="CollegeType" class="form-select">
                            <option value="Senior">Senior</option>
                            <option value="Junior">Junior</option>
                        </select>
                        <span asp-validation-for="CollegeType" class="text-danger"></span>
                        <div class="form-text">Specify whether this is a senior or junior college course</div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="DurationYears" class="form-label fw-bold"></label>
                        <div class="input-group">
                            <input asp-for="DurationYears" class="form-control" type="number" min="1" max="10" />
                            <span class="input-group-text">year(s)</span>
                        </div>
                        <span asp-validation-for="DurationYears" class="text-danger"></span>
                        <div class="form-text">Length of the course in years (typically 1-5)</div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="Credits" class="form-label fw-bold"></label>
                        <div class="input-group">
                            <input asp-for="Credits" class="form-control" type="number" min="1" />
                            <span class="input-group-text">credits</span>
                        </div>
                        <span asp-validation-for="Credits" class="text-danger"></span>
                        <div class="form-text">Total credits required to complete the course</div>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-end mt-4">
                <a asp-action="Details" asp-route-id="@Model.CourseId" class="btn btn-light me-2">Cancel</a>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save me-1"></i> Save Changes
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Auto-generate slug from course name if user starts editing the name
        $(document).ready(function() {
            let originalName = $('#CourseName').val();
            let slugModified = false;

            $('#Slug').on('change', function() {
                slugModified = true;
            });

            $('#CourseName').on('input', function() {
                if (!slugModified) {
                    // Simple slug generation
                    let slug = $(this).val()
                        .toLowerCase()
                        .replace(/[^\w\s-]/g, '')
                        .replace(/\s+/g, '-')
                        .replace(/--+/g, '-')
                        .trim();

                    $('#Slug').val(slug);
                }
            });

            // Dynamically filter departments based on college type
            $('#CollegeType').on('change', function() {
                let collegeType = $(this).val();
                if (collegeType) {
                    // This would typically call an API endpoint to get filtered departments
                    // For now, we'll just log the action
                    console.log(`Would filter departments for college type: ${collegeType}`);
                }
            });
        });
    </script>
}