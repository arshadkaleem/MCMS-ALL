@model MCMS.Infrastructure.Models.Department
@{
    ViewData["Title"] = "Edit Department";
    ViewData["Subtitle"] = "Modify department information";
}

<div class="card shadow-sm">
    <div class="card-header bg-white d-flex justify-content-between align-items-center py-3">
        <h5 class="mb-0 text-dark fw-bold">Edit Department Information</h5>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Back to List
        </a>
    </div>
    <div class="card-body">
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
                <div class="d-flex">
                    <i class="fas fa-exclamation-circle me-2 mt-1"></i>
                    <div>
                        <strong>Please correct the following errors:</strong>
                        <ul class="mb-0 mt-1">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="DepartmentId" />

            <div class="mb-4">
                <label asp-for="DepartmentName" class="form-label fw-bold"></label>
                <input asp-for="DepartmentName" class="form-control" placeholder="Enter department name" />
                <span asp-validation-for="DepartmentName" class="text-danger"></span>
                <div class="form-text">The full official name of the department</div>
            </div>

            <div class="mb-4">
                <label asp-for="Slug" class="form-label fw-bold"></label>
                <div class="input-group">
                    <span class="input-group-text text-muted">/departments/</span>
                    <input asp-for="Slug" class="form-control" placeholder="department-slug" />
                </div>
                <span asp-validation-for="Slug" class="text-danger"></span>
                <div class="form-text">URL-friendly version of the department name (auto-generated, edit if needed)</div>
            </div>

            <div class="mb-4">
                <label asp-for="CollegeType" class="form-label fw-bold"></label>
                <select asp-for="CollegeType" class="form-select">
                    <option value="Senior">Senior</option>
                    <option value="Junior">Junior</option>
                </select>
                <span asp-validation-for="CollegeType" class="text-danger"></span>
                <div class="form-text">Select whether this department belongs to senior or junior college</div>
            </div>

            <div class="d-flex justify-content-end mt-4">
                <a asp-action="Details" asp-route-id="@Model.DepartmentId" class="btn btn-light me-2">Cancel</a>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save me-1"></i> Save Changes
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Auto-generate slug from department name if user starts editing the name
        $(document).ready(function() {
            let originalName = $('#DepartmentName').val();
            let slugModified = false;

            $('#Slug').on('change', function() {
                slugModified = true;
            });

            $('#DepartmentName').on('input', function() {
                if (!slugModified) {
                    // Simple slug generation (in production, this would usually call an API)
                    let slug = $(this).val()
                        .toLowerCase()
                        .replace(/[^\w\s-]/g, '')
                        .replace(/\s+/g, '-')
                        .replace(/--+/g, '-')
                        .trim();

                    $('#Slug').val(slug);
                }
            });
        });
    </script>
}